% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/noise.R
\name{noise}
\alias{noise}
\alias{noise_2d}
\alias{noise_3d}
\title{Create a noise generator}
\usage{
noise_2d(
  noise_type = c("OpenSimplex2", "OpenSimplex2S", "Cellular", "Perlin", "ValueCubic",
    "Value"),
  frequency = 0.01,
  fractal_type = c("None", "FBm", "Rigid", "PingPong"),
  octaves = 3,
  lacunarity = 2,
  gain = 0.5,
  weighted_strength = 0,
  ping_pong_strength = 2,
  distance_function = c("EuclideanSq", "Euclidean", "Manhattan", "Hybrid"),
  return_type = c("Distance", "CellValue", "Distance2", "Distance2Add", "Distance2Sub",
    "Distance2Mul", "Distance2Div"),
  jitter = 1
)

noise_3d(
  noise_type = c("OpenSimplex2", "OpenSimplex2S", "Cellular", "Perlin", "ValueCubic",
    "Value"),
  frequency = 0.01,
  fractal_type = c("None", "FBm", "Rigid", "PingPong"),
  octaves = 3,
  lacunarity = 2,
  gain = 0.5,
  weighted_strength = 0,
  ping_pong_strength = 2,
  distance_function = c("EuclideanSq", "Euclidean", "Manhattan", "Hybrid"),
  return_type = c("Distance", "CellValue", "Distance2", "Distance2Add", "Distance2Sub",
    "Distance2Mul", "Distance2Div"),
  jitter = 1,
  rotation_type = c("None", "ImproveXYPlanes", "ImproveXZPlanes")
)
}
\arguments{
\item{noise_type}{A string; Noise type to use.}

\item{frequency}{A numeric scalar; Frequency.}

\item{fractal_type}{A string; Fractal type.}

\item{octaves}{A numeric scalar; Number of octaves.}

\item{lacunarity}{A numeric scalar;
Lacunarity (the frequency multiplier between each octave).}

\item{gain}{A numeric scalar;
Gain (the relative strength of noise from each layer when compared to the last).}

\item{weighted_strength}{A numeric scalar;
Weighted strength for fractal noise.
Keep between \code{0} and \code{1} to maintain \verb{[-1, 1]} output bounding.}

\item{ping_pong_strength}{A numeric scalar;
Ping-pong strength for 'PingPong' fractal noise.}

\item{distance_function}{A string; Distance function for cellular noise.}

\item{return_type}{A string; Return type for cellular noise.}

\item{jitter}{A numeric scalar; Jitter for cellular noise.}

\item{rotation_type}{A string; Rotation type for 3D noise.}
}
\value{
A function that takes arguments:
\itemize{
\item \code{x}, \code{y}, (or just \code{data}) and \code{seed} for 2D noise
\item \code{x}, \code{y}, \code{z}, (or just \code{data}) and \code{seed} for 3D noise
}

and returns noise values.
Note that \code{seed} is set to a random value by default,
so if you want to use the same seed for multiple calls, you need to explicitly set it.
}
\description{
Creates a noise generator function that wraps
\href{https://github.com/Auburn/FastNoiseLite}{FastNoiseLite}.
}
\examples{
noise_2d()(1:10, 1)
noise_3d()(1:16, 1:16, 1)
}
\seealso{
\href{https://github.com/Auburn/FastNoiseLite/wiki/Documentation}{Documentation Â· Auburn/FastNoiseLite Wiki}
}
